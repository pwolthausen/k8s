apiVersion: v1
kind: Namespace
metadata:
  name: ssl-test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssl-pod
  namespace: ssl-test
spec:
  replicas: 2
  selector:
    matchLabels:
      web: ssl
  template:
    metadata:
      labels:
        web: ssl
    spec:
      volumes:
      - name: ssl-certs
        secret:
          secretName: ssl-certs
          items:
          - key: tls.crt
            path: certs/tls.crt
          - key: tls.key
            path: private/tls.key
      - name: nginx-config
        configMap:
          name: ssl-pod-config
          items:
          - key: ssl.template
            path: ssl.template
      containers:
      - name: ssl-webserver
        image: nginx:latest
        ports:
        - containerPort: 443
        volumeMounts:
## Mount certs from secret
        - name: ssl-certs
          mountPath: /etc/ssl/
        - name: nginx-config
          mountPath: /etc/nginx/templates/
        env:
## fetch the pod IP for the nginx config
        - name: IPADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
## Nginx conf does not read env variables, so using envsubst to fetch variable and push the server block config with the host IP
        args:
        - /bin/bash
        - -c
        - envsubst < /etc/nginx/templates/ssl.template > /etc/nginx/conf.d/ssl.conf && nginx -g 'daemon off;'
---
apiVersion: v1
kind: Service
metadata:
  name: ssl-pod
  namespace: ssl-test
  annotations:
spec:
  ports:
  - port: 443
  selector:
    web: ssl
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssl-pod-config
  namespace: ssl-test
data:
  ssl.template: |
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name $IPADDRESS;
        ssl on;
        ssl_certificate /etc/ssl/certs/tls.crt;
        ssl_certificate_key /etc/ssl/private/tls.key;
        root /usr/share/nginx/html;
    }
